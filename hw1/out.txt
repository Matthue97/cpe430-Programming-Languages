
--------- Part1 ---------
 **** intToString 99;
val it = "99" : string
 **** intToString ~1;
val it = "-1" : string
 **** intToString 12;
val it = "12" : string
 **** intToString ~4729;
val it = "-4729" : string

--------- Part2 ---------
 **** listLength [];
val it = 0 : int
 **** listLength [3, 2, 3, 4];
val it = 4 : int
 **** listLength ["abc", "123", "shoe"];
val it = 3 : int

--------- Part3 ---------
 **** numberOf 1 [];
val it = 0 : int
 **** numberOf 4 [1,2,3,4];
val it = 1 : int
 **** numberOf 5 [1,2,3,4];
val it = 0 : int
 **** numberOf 4 [1,4,3,4];
val it = 2 : int
 **** numberOf 4 [1,4,3,4,5,6,8,2,1,4];
val it = 3 : int

--------- Part4 ---------
 **** pairSwap [];
val it = [] : (?.X1 * ?.X2) list
 **** pairSwap [(1,2)];
val it = [(2,1)] : (int * int) list
 **** pairSwap [(1,2),(3,4),(5,6)];
val it = [(2,1),(4,3),(6,5)] : (int * int) list
 **** pairSwap [(1,#"a"),(2,#"b")];
val it = [(#"a",1),(#"b",2)] : (char * int) list

--------- Part5 ---------
 **** findPair 1 [(2, 3), (4, 1), (1, 9)];
val it = SOME (1,9) : (int * int) option
 **** findPair "key" [("key", 3), ("key", 1), ("key", 9)];
val it = SOME ("key",3) : (string * int) option
 **** findPair "bob" [("three", 3), ("shoe", 1), ("key", 9)];
val it = NONE : (string * int) option

--------- Part6 ---------
 **** unzip [(1, #"a"), (2, #"b"), (3, #"c")];
val it = ([1,2,3],[#"a",#"b",#"c"]) : int list * char list
 **** unzip [(#"a", 1), (#"b", 2), (#"c", 3)];
val it = ([#"a",#"b",#"c"],[1,2,3]) : char list * int list
 **** unzip [(1, 2), (3, 4), (5, 6)];
val it = ([1,3,5],[2,4,6]) : int list * int list
 **** unzip [];
val it = ([],[]) : ?.X1 list * ?.X2 list

--------- Part7 ---------
 **** zip [1,2,3] [#"a", #"b", #"c"];
val it = [(1,#"a"),(2,#"b"),(3,#"c")] : (int * char) list
 **** zip [] [];
val it = [] : (?.X1 * ?.X2) list
 **** zip [1] [2];
val it = [(1,2)] : (int * int) list
 **** zip [3, 2] [4, 5, 6];
caught expected exception
val it = [] : (int * int) list

--------- Part8 ---------
 **** splitFilter (fn x => x mod 2 = 0) [1, 2, 3, 4, 5, 6];
val it = ([2,4,6],[1,3,5]) : int list * int list
 **** splitFilter (fn x => x > 0) [1, 2, 3, 4, 5, 6];
val it = ([1,2,3,4,5,6],[]) : int list * int list
 **** splitFilter (fn x => x < 0) [1, 2, 3, 4, 5, 6];
val it = ([],[1,2,3,4,5,6]) : int list * int list
 **** splitFilter (fn x => x > 0) [1, ~2, ~3, 4, ~5, 6];
val it = ([1,4,6],[~2,~3,~5]) : int list * int list

--------- Part9 ---------
 **** fileSubst "fileSubst.input" [(#"a", #"A"), (#"1", #"9"), (#"a", #"-"), (#"z", #"Z")];
Abcdefg
92Abc
defg92
xyZ

--------- Part10 ---------
 **** wordsFromFile "wordsFromFile.input";
val it = ["I","didn't","have","time."] : string list
